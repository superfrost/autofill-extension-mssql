# –ò–º—è –≤—ã—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
CRX_PACKAGE := crx
NODE_VERSION := v16.0.0
BINARY_NAME = autofillserver
EXTENSION_DIR = extension
OUTPUT_FILE_CRX := autofiller_ext.crx
OUTPUT_FILE_XPI := autofiller_ext.xpi
KEY_FILE := ./key.pem
DIST_DIR = dist
ZIP_FILE = $(DIST_DIR)/autofill_ext.zip

# –ü–∞–ø–∫–∞ —Å –∏—Å—Ö–æ–¥–Ω—ã–º –∫–æ–¥–æ–º —Å–µ—Ä–≤–µ—Ä–∞
SRC_DIR = server

# –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –¥–ª—è —É–ø–∞–∫–æ–≤–∫–∏ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è
EXT_FILES = manifest.json style.css content.js background.js popup/popup.html popup/popup.js icons/icon16.png icons/icon48.png icons/icon128.png popup/ icons/

# –¶–µ–ª–∏ –¥–ª—è —Å–±–æ—Ä–∫–∏
all: clean tidy build_extensions build_server

tidy:
	@echo "go tidy..."
	@cd $(SRC_DIR) && go mod tidy

dev: tidy
	@cd $(SRC_DIR) && go run main.go

# –£–ø–∞–∫–æ–≤–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è –≤ ZIP
package_extension_zip:
	@mkdir -p $(DIST_DIR)
	@echo "üì¶ –£–ø–∞–∫–æ–≤–∫–∞ —Ñ–∞–π–ª–æ–≤ –≤ ZIP..."
	@cp -r $(EXTENSION_DIR)/* $(DIST_DIR)
	@cd $(DIST_DIR) && zip -r ../$(ZIP_FILE) .
	@cd $(DIST_DIR) && rm -fd $(EXT_FILES)
	@echo "‚úÖ –§–∞–π–ª—ã —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è —É–ø–∞–∫–æ–≤–∞–Ω—ã –≤ zip"

build_crx_xpi: check-node check-crx generate-key
	@echo "üîß –°–±–æ—Ä–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π crx, xpi..."
	@mkdir -p $(DIST_DIR)
	crx pack $(EXTENSION_DIR) -p $(KEY_FILE) -o $(DIST_DIR)/$(OUTPUT_FILE_CRX)
	@echo "‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω–æ: $(DIST_DIR)/$(OUTPUT_FILE_CRX)"
	@cp $(DIST_DIR)/$(OUTPUT_FILE_CRX) $(DIST_DIR)/$(OUTPUT_FILE_XPI)
	@echo "‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω–æ: $(DIST_DIR)/$(OUTPUT_FILE_XPI)"

check-node:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Node.js..."
	@which node > /dev/null || (echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js –≤–µ—Ä—Å–∏–∏ $(NODE_VERSION) –∏–ª–∏ –≤—ã—à–µ."; exit 1)
	@node -v | grep -q '^v' || (echo "‚ùå Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ"; exit 1)
	@echo "‚úÖ Node.js —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: $$(node -v)"

check-crx:
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø–∞–∫–µ—Ç–∞ crx..."
	@npm list -g $(CRX_PACKAGE) --depth=0 > /dev/null 2>&1 || (echo "‚ùå –ü–∞–∫–µ—Ç crx –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≥–ª–æ–±–∞–ª—å–Ω–æ. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install -g crx"; exit 1)
	@echo "‚úÖ –ü–∞–∫–µ—Ç crx —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"

generate-key:
	@echo "üîë –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–∞ –ø–æ–¥–ø–∏—Å–∏..."
	@if [ ! -f $(KEY_FILE) ]; then \
		echo "‚ö†Ô∏è –ö–ª—é—á –Ω–µ –Ω–∞–π–¥–µ–Ω. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞..."; \
		openssl genrsa -out $(KEY_FILE) 2048; \
		echo "‚úÖ –ù–æ–≤—ã–π –∫–ª—é—á —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: $(KEY_FILE)"; \
	else \
		echo "‚úÖ –ö–ª—é—á —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: $(KEY_FILE)"; \
	fi

build_extensions: package_extension_zip build_crx_xpi

# –°–±–æ—Ä–∫–∞ –¥–ª—è Linux
build_linux:
	@echo "–°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Linux..."
	@cd $(SRC_DIR) && GOOS=linux GOARCH=amd64 go build -o ../$(DIST_DIR)/$(BINARY_NAME)_linux_amd64 main.go
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Linux –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –°–±–æ—Ä–∫–∞ –¥–ª—è Windows
build_windows:
	@echo "–°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Windows..."
	@cd $(SRC_DIR) && GOOS=windows GOARCH=amd64 go build -o ../$(DIST_DIR)/$(BINARY_NAME)_windows_amd64.exe main.go
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è Windows –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –°–±–æ—Ä–∫–∞ –¥–ª—è macOS intel
build_darwin:
	@echo "–°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è MacOS..."
	@cd $(SRC_DIR) && GOOS=darwin GOARCH=amd64 go build -o ../$(DIST_DIR)/$(BINARY_NAME)_darwin_amd64 main.go
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è MacOS –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –°–±–æ—Ä–∫–∞ –¥–ª—è macOS arm
build_darwin_arm64:
	@echo "–°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è MacOS arm64..."
	@cd $(SRC_DIR) && GOOS=darwin GOARCH=arm64 go build -o ../$(DIST_DIR)/$(BINARY_NAME)_darwin_arm64 main.go
	@echo "‚úÖ –°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è MacOS arm64 –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# –°–±–æ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –≤—Å–µ—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º
build_server: build_linux build_windows build_darwin build_darwin_arm64

# –û—á–∏—Å—Ç–∫–∞ –≤—ã—Ö–æ–¥–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞..."
	rm -rf $(DIST_DIR)
	@echo "‚úì –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è dist –æ—á–∏—â–µ–Ω–∞"

# –¶–µ–ª—å –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
.PHONY: all tidy clean build_extensions package_extension_zip build_crx_xpi check-node check-crx generate-key build_server build_linux build_windows build_darwin build_darwin_arm64
